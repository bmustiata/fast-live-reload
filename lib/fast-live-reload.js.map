{"version":3,"sources":["../src/node/shell-prefix.js","../src/node/requires.js","../src/server/Watcher.js","../src/server/ChangeServer.js","../src/server/CommandLineParser.js","../src/server/ParsedUri.js","../src/server/IFrameServer.js","../src/server/NoopChangeServer.js","../src/server/ExecuteCommandsServer.js","../src/server/ExecutorSet.js","../src/node/show-help.js","../src/node/read-parameters.js","../src/node/server-main.js"],"names":[],"mappings":"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","file":"fast-live-reload.js","sourcesContent":["#!/usr/bin/env node\n\n","var createClass = require(\"superb-class\").createClass,\n    express = require(\"express\"),\n    expressWs = require(\"express-ws\"),\n    chalk = require(\"chalk\"),\n    expressHandlebars = require(\"express-handlebars\"),\n    expressProxy = require(\"express-http-proxy\"),\n    expressCookieParser = require(\"cookie-parser\"),\n    handlebars = require(\"handlebars\"),\n    fs = require(\"fs\"),\n    path = require(\"path\"),\n    onceMany = require(\"once-many\").onceMany,\n    tamper = require(\"tamper\"),\n    glob = require(\"glob\"),\n    chokidar = require(\"chokidar\"),\n    childProcess = require(\"child_process\");\n\n","// var _log = console.log;\nvar _log = function() {};\n\n/**\n * Monitors folders or files, and notifies the registered subscribers whenever\n * files change, with an aggregate object of changes.\n * @type {Watcher}\n */\nvar Watcher = createClass({\n    /**\n     * @type {Array<Function>}\n     */\n    _listeners : null,\n\n    /**\n     * Holds the list of folders that will have watchers created for. Since files\n     * can also be individually monitored, they will be available separately into\n     * their own list.\n     * @type {Array<string>}\n     */\n    _paths : null,\n\n    /**\n     * Holds the list of files to be monitored. The list is mapped as an Object\n     * that holds for keys the folders that contain the files, and for values,\n     * other objects that have for keys the individual file name.\n     * @type {Object}\n     */\n    _monitoredFiles : null,\n\n    /**\n     * @type {Array<FileMonitor>}\n     */\n    _folderMonitors : null,\n\n    // Use a timeout to record several changes that happen quickly in only\n    // one object. The current changes keeps the changes that need to be\n    // fired.\n    _notificationTimeout : null,\n    _currentChanges : null,\n\n    /**\n     * @type {number} At how many millis to poll the paths.\n     */\n    _pollInterval : null,\n\n    /**\n     * @param {number} pollInterval Time to poll the paths.\n     * @param {number} delay Time to wait before triggering changes.\n     * @param {Array<string>} paths Monitors the given paths.\n     */\n    constructor : function(pollInterval, delay, paths) {\n        if (!paths || (typeof paths.length == \"undefined\")) {\n            throw new Error('Watcher must have a paths array to monitor.');\n        }\n\n        this._delay = delay;\n\n        this._listeners = [];\n        this._folderMonitors = [];\n\n        this._readPathsAndMonitoredFiles(paths);\n        this._pollInterval = pollInterval;\n    },\n\n\n    /**\n     * _readPathsAndMonitoredFiles - Fills in the _paths and the\n     * _monitoredFileas. In the _paths there will be only the actual folders\n     * that need to be monitored.\n     *\n     * @param {Array<string>} paths\n     * @return {void}\n     */\n    _readPathsAndMonitoredFiles : function(paths) {\n        this._paths = [];\n        this._monitoredFiles = {};\n\n        for (var i = 0; i < paths.length; i++) {\n            var path = paths[i];\n\n            if (this._isFile(path)) {\n                var PATH_RE = /^((.*[\\\\/])?(.+?))$/,\n                    pathTokens = PATH_RE.exec(path),\n                    parentFolder = this._normalizePath(pathTokens[2]), // if the path is in the current folder, mark it as such\n                    fileName = this._normalizePath(pathTokens[3]);\n\n                if (this._paths.indexOf(parentFolder) < 0) { // this._paths doesn't contain parentFolder\n                    this._paths.push(parentFolder);\n                }\n\n                if (!this._monitoredFiles[parentFolder]) {\n                    this._monitoredFiles[parentFolder] = {};\n                }\n\n                this._monitoredFiles[parentFolder][fileName] = 1;\n            } else {\n                this._paths.push(this._normalizePath(path));\n            }\n        }\n    },\n\n    /**\n     * _isFile - Checks if the given path is a file.\n     * @param {string} path\n     * @return {boolean}\n     */\n    _isFile : function(path) {\n        return fs.statSync(path).isFile();\n    },\n\n    /**\n     * Adds a listener that will  be notified when paths\n     * are changed.\n     */\n    addListener : function(callback) {\n        this._listeners.push(callback);\n    },\n\n    /**\n     * Start monitoring the given folder.\n     */\n    monitor : function() {\n        var path;\n\n        for (var i = 0; i < this._paths.length; i++) {\n            path = this._paths[i];\n\n            var monitor = chokidar.watch(path, {\n                persistent: true\n            });\n            this._createMonitor(path, monitor);\n        }\n    },\n\n    /**\n     * Creates the file monitor.\n     * @param {string} path The that the created monitor watches.\n     * @param {Object} monitor The monitor object created.\n     */\n    _createMonitor : function(path, monitor) {\n        this._folderMonitors.push(monitor);\n\n        monitor.on(\"add\", this._notify.bind(this, path, \"created\"));\n        monitor.on(\"change\", this._notify.bind(this, path, \"changed\"));\n        monitor.on(\"unlink\", this._notify.bind(this, path, \"removed\"));\n    },\n\n    /**\n     * Start recording the changed paths.\n     * @param {string} stringPath The path where the change occured.\n     * @param {string} event The event name of what happened (created/changed/removed)\n     * @param {string} f The file name where the event occured.\n     */\n    _notify : function(stringPath, event, f) {\n        // Since we can only monitor for folders, whenever we have to monitor specific files,\n        // we need to have a watcher over the folder that contains them, and we need to filter\n        // out the non matching hits (since in that folder there can be changes in files\n        // we don't care about).\n\n        _log(\"Watcher.notify: \", stringPath, event, f);\n\n        stringPath = this._normalizePath(stringPath);\n        f = this._fileName(this._normalizePath(f));\n\n        _log(\"  path:\", stringPath);\n        _log(\"  file:\", f);\n\n        // if the given notification is on a file that is independently monitored\n        if (this._monitoredFiles[stringPath]) {\n            if (!this._monitoredFiles[stringPath][f]) {\n                _log(\"The file: \", f, \" is not monitored in the path: \", this._monitoredFiles[stringPath]);\n                // no monitored file matched, just some non monitored file changed,\n                // ignoring the change.\n                return;\n            }\n        } else {\n            _log(\"Path is not in monitored files: \", stringPath, \" monitored files: \", this._monitoredFiles);\n        }\n\n        if (!this._notificationTimeout) {\n            var delay = this._delay >= 0 ? this._delay : 0;\n\n            this._notificationTimeout = setTimeout(this._fireChangedFiles.bind(this), delay);\n            this._currentChanges = {\n                eventCount : 0,\n                \"created\" : {},\n                \"changed\" : {},\n                \"removed\" : {}\n            };\n        }\n\n        var fullFileName = path.resolve(stringPath, f);\n        this._currentChanges[event][fullFileName] = this._currentChanges.eventCount++;\n    },\n\n    /**\n     * Notify the listeners of all the changed events.\n     */\n    _fireChangedFiles : function() {\n        this._listeners.forEach(function(listener) {\n            try {\n                listener.call(null, this._currentChanges);\n            } catch (e) {\n                console.warn(\"Unable to notify listener, skipping: \", e);\n            }\n        }.bind(this));\n\n        this._notificationTimeout = null;\n        this._currentChanges = null;\n    },\n\n    /**\n     * _normalizePath - Normalizes the given path. Removes trailing slashes, and checks for empty strings,\n     *                  replacing them with `.`, the current folder.\n     * @param {string} path\n     * @return {string}\n     */\n    _normalizePath : function(path) {\n        if (!path) {\n            return \".\";\n        }\n\n        path = path.replace(/\\\\/g, \"/\"); // normalize windows Paths.\n\n        if (path != '/' && /[\\\\/]$/.test(path) ) { // if the path ends with a slash\n            return path.substr(0, path.length - 1);\n        }\n\n        return path;\n    },\n\n    /**\n     * _fileName - Drops any folder, and returns only the file name (basename)\n     * @param {string} f\n     * @return {string}\n     */\n    _fileName: function(f) {\n        return f.replace(/^.*[\\\\/]/, \"\");\n    }\n});\n\n","/**\n * The server keeps all the received connections,\n * in a pending state,  and notifies all the users when a\n * change happened, with the changed data.\n */\nvar ChangeServer = createClass({\n    _express : null,\n\n    _expressWs : null,\n\n    _connectedClients : null,\n\n    /**\n     * @type {number}\n     */\n    _port : null,\n\n    /**\n     * Constructs the server that will listen on the given port.\n     * Defaults to 9001 if not present.\n     * @param {number?} port The port to listen to.\n     */\n    constructor : function(port) {\n        this._port = port;\n\n        this._express = express();\n        this._express.get(\"/\", this._storeRequest.bind(this));\n\n        this._expressWs = expressWs(this._express);\n        this._express.ws(\"/\", this._wsClientConnection.bind(this));\n\n        this._connectedClients = [];\n    },\n\n    /**\n     * Whenever a new request arrived, keep it in the list of\n     * things that we should respond to when resources change.\n     */\n    _storeRequest : function(req, res) {\n        this._connectedClients.push({\n            request: req,\n            response: res\n        });\n    },\n\n    _wsClientConnection : function(ws, req){\n        // Nothing to do here!\n        // ws.on('message', function(msg) {\n        //     console.log(msg);\n        // });\n        // ws.on('close', function(ws){\n        //     console.log('connection closed');\n        //     console.log(ws);\n        // });\n        // console.log('new connection');\n    },\n\n    /**\n     * Starts listening.\n     */\n    run : function() {\n        //console.log(\"Changes are served on port: \" + chalk.cyan(this._port));\n        this._express.listen(this._port);\n    },\n\n    /**\n     * Callback method where the server is notified that monitored\n     * files have changed.\n     */\n    filesChanged : function(changes) {\n        // AJAX clients\n        for (var i = 0; i < this._connectedClients.length; i++) {\n            var response = this._connectedClients[i].response,\n                request = this._connectedClients[i].request;\n\n            // if we know the origin, we allow it, otherwise default to any\n            if (request.header.origin) {\n                response.set('Access-Control-Allow-Origin', request.headers.origin);\n            } else {\n                response.set('Access-Control-Allow-Origin', '*');\n            }\n\n            response.send(JSON.stringify(changes));\n        }\n\n        this._connectedClients = [];\n\n        // WebSocket clients\n        this._expressWs.getWss().clients.forEach(function(client){\n            client.send(JSON.stringify(changes));\n        });\n    }\n});\n\n","/**\n * CommandLineParser - Parses the command line, extracting the actual command to execute, and the parameters given to it into an array.\n * @type {CommandLineParser}\n */\nvar CommandLineParser = createClass(\"CommandLineParser\", {\n\t_command : \"\",\n    _args : null,\n\n    /**\n     * constructor - Parses the command line\n     * @param {string} commandLine\n\t */\n    constructor: function(commandLine) {\n        var state = \"NORMAL\"; // can be: NORMAL, SINGLE_QUOTE, DOUBLE_QUOTE, ESCAPE_CHAR\n        var previousState;\n        var args = [], command = \"\";\n\n        var currentToken = \"\";\n\n        for (var i = 0; i < commandLine.length; i++) {\n            var currentChar = commandLine[i];\n\n            if (state == \"NORMAL\") {\n                if (currentChar == \" \") {\n                    // only if we found some token, we process it,\n                    // otherwise it's just bogus spaces.\n                    if (currentToken.length) {\n                       if (command.length) {\n                            args.push(currentToken);\n                        } else {\n                            command = currentToken;\n                        }\n\n                        currentToken = \"\";\n                    }\n\n                    continue;\n                }\n\n                if (currentChar == '\"') {\n                    state = \"DOUBLE_QUOTE\";\n                    continue;\n                }\n\n                if (currentChar == \"'\") {\n                    state = \"SINGLE_QUOTE\";\n                    continue;\n                }\n\n                if (currentChar == \"\\\\\") {\n                    previousState = state;\n                    state = \"ESCAPE_CHAR\";\n                    continue;\n                }\n\n                currentToken += currentChar;\n                continue;\n            }\n\n            if (state == \"ESCAPE_CHAR\") {\n                currentToken += currentChar;\n                state = previousState;\n                continue;\n            }\n\n            if (state == \"SINGLE_QUOTE\") {\n                if (currentChar == \"'\") {\n                    state = \"NORMAL\";\n                    continue;\n                }\n\n                currentToken += currentChar;\n                continue;\n            }\n\n            if (state == \"DOUBLE_QUOTE\") {\n                if (currentChar == '\"') {\n                    state = \"NORMAL\";\n                    continue;\n                }\n\n                currentToken += currentChar;\n                continue;\n            }\n        } // end for each char\n\n        if (currentToken.length) {\n           if (command.length) {\n                args.push(currentToken);\n            } else {\n                command = currentToken;\n            }\n        }\n\n        if (state != \"NORMAL\") {\n            throw new Error(\"Unterminated command: \" + commandLine);\n        }\n\n        if (!command) {\n            throw new Error(\"Empty command: \" + commandLine);\n        }\n\n        this._command = command;\n        this._args = args;\n    },\n\n    /**\n     * getCommand - Getter for the command\n     * @return {string}\n     */\n    getCommand : function() {\n        return this._command;\n    },\n\n    /**\n     * getArgs - Gets the array of arguments of the command.\n     * @return {Array<string>}\n     */\n    getArgs : function() {\n        return this._args;\n    }\n});\n","/**\n * ParsedUri - Parses the URI for serving the content.\n *\n * In case the URI given is a remote location, is used as is, and the\n * `proxyHost` and `requestPath` will be extracted from the given URI.\n * `folderUri` will point to the given `uri` for remote locations.\n *\n * In case the URI given is a local location, the parser will check if\n * the uri is actually a file. If it's a file, then folderUri will point\n * to the parent folder of that file, otherwise folderUri and uri will\n * be the same.\n *\n * @type {UriParser}\n */\nvar ParsedUri = createClass(\"ParsedUri\", {\n\turi : null,\n    folderUri : null,\n\n    isfileUri : false,\n\n    proxyHost : null,\n    requestPath : null,\n\n    /**\n     * constructor - default constructor\n     * @param {} uri\n\t */\n    constructor: function(uri) {\n        var m = /^(.*?\\:\\/\\/[^/]+)(\\/?.*)$/.exec( uri );\n\n        this.uri = uri;\n        this.folderUri = uri;\n\n        if (!m) {\n            this.isFileUri = true;\n\n            if (fs.statSync(uri).isFile()) {\n                this.folderUri = path.dirname(uri);\n            }\n        } else {\n            this.proxyHost = m[ 1 ],\n            this.requestPath = m[ 2 ];\n        }\n    }\n});\n","/**\n * Create a server that serves the iframe page,\n * in a handlebars template, to provide the URL\n * to redirect to automatically, and proxies the\n * content of the original page. In case the URI\n * is a file, it just serves the file.\n */\nvar IFrameServer = createClass({\n    _port : null,\n    _parsedServeUri : null,\n    _injectClientCode : true,\n\n    /**\n     * Constructs a handlebars server that serves the given path.\n     * @param {number} port The port to start listening onto.\n     * @param {ParsedUri} parsedUri A parsed URI to proxy or serve.\n     * @param {number} clientPort The client port where the client waits for notifications.\n     * @param {boolean} shouldInjectClientCode A flag if to inject the client code\n     *      in the HTML pages or not.\n     */\n    constructor : function(port, parsedUri, clientPort, shouldInjectClientCode) {\n        this._port = port;\n        this._parsedServeUri = parsedUri;\n        this._injectClientCode = shouldInjectClientCode;\n        this._clientPort = clientPort;\n\n        var app = this._app = express();\n\n        app.set('views', __dirname + '/../iframe/fast-live-reload/');\n\n        var hbs = expressHandlebars.create();\n\n        app.engine('handlebars', hbs.engine);\n        app.set('view engine', 'handlebars');\n\n        app.use(expressCookieParser());\n        app.use(express.static( __dirname + '/../iframe' ));\n    },\n\n    /**\n     * Runs the actual server.\n     */\n    run : function() {\n        if (this._parsedServeUri.isFileUri) {\n            this._serveFileUri();\n        } else {\n            this._serveProxyUri();\n        }\n\n        /**\n         * Redirect on the first reload.\n         */\n        if (!this._injectClientCode) { // redirect only if no client code is injected.\n            this._app.use('/', function (req, res, next) {\n\n                if (req.path == '/fast-live-reload/' || req.cookies.fastLiveReload) {\n                    if (!req.cookies.fastLiveReload) { // called directly /fast-live-reload/\n                        res.cookie('fastLiveReload', 'true');\n                    }\n                    return next();\n                }\n\n                res.cookie('fastLiveReload', 'true');\n                res.redirect('/fast-live-reload/');\n            }.bind(this));\n        }\n\n        /**\n         * Serve the fast-live-reload page.\n         */\n        this._app.get('/fast-live-reload/', function(req, res, next) {\n        \tres.render('index', {\n                TARGET_URL : this._parsedServeUri.requestPath,\n                CLIENT_HOST : this._getClientHost(req)\n            });\n        }.bind(this));\n\n        this._app.listen(this._port);\n    },\n\n    /**\n     * _serveProxyUri - Serves the content using a PROXY.\n     * @return {void}\n     */\n    _serveProxyUri : function() {\n        /**\n         * Load the proxy.\n         */\n        var _this = this;\n        this._app.use('/', expressProxy(this._parsedServeUri.proxyHost, {\n            filter : function(req, res) {\n                // if this is a fast-live-reload request for the iframe integration,\n                //then we don't need to do anyhting.\n                if (/^\\/fast-live-reload\\//.test(req.path)) {\n                    return false;\n                }\n\n                return true;\n            },\n\n            decorateUseRes : function(rsp, data, req, res, callback) {\n                // allow in frame embedding.\n                res.set('Access-Control-Allow-Origin', '*');\n                res.set('X-Frame-Options', '');\n\n                if (this._injectClientCode) {\n                    var bufferData = data.toString();\n                    if (/(<\\/body>([\\s\\S]*?)<\\/html>\\s*)$/i.test(bufferData)) {\n                        var codeToInject = this._generateInjectClientCode(req);\n                        data = bufferData.replace(/(<\\/body>([\\s\\S]*?)<\\/html>\\s*)$/i, codeToInject + \"$1\");\n                        data = data.replace(/<base\\s+href=\".*?\"\\s*(\\/>)|(><\\/base>)/i, \"\");\n                    }\n                }\n\n                if (!callback) { // in newer versions callback is undefined, and we need to return\n                  return data;\n                }\n\n                callback(null, data);\n            }.bind(this)\n        }));\n    },\n\n    /**\n     * _generateInjectClientCode - Generates the code that needs to be injected\n     * into a page in order to get the live reloading. It should be the client\n     * configuration, and the reference to the client-reload.js script.\n     * @param {Request} req The original request\n     * @return {string}\n     */\n    _generateInjectClientCode : function(req) {\n        var clientHost = this._getClientHost(req);\n\n        return \"<script type='text/javascript'>window.fastLiveReloadHost = window.fastLiveReloadHost || '\" + clientHost + \"';</script>\" +\n            \"<script src='/fast-live-reload/js/client-reload.js'></script>\";\n    },\n\n    /**\n     * _getClientHost - Gets the client host, from the current request, and the this._clientPort.\n     * @param {Request} req\n     * @return {string}\n     */\n    _getClientHost : function(req) {\n        var result = req.headers.host.replace(/^(.+?)(:\\d+)?$/, '$1:' + this._clientPort);\n\n        return result;\n    },\n\n    /**\n     * _serveFileUri - Serves local files content.\n     * @return {void}\n     */\n    _serveFileUri : function() {\n        if (this._injectClientCode) {\n            this._app.use(tamper(function (req, res) {\n                var mime = res.getHeader('Content-Type')\n\n                if (!/text\\/html/.test(mime)) {\n                    return false;\n                }\n\n                if (/^\\/fast-live-reload\\//.test(req.path)) {\n                    return false;\n                }\n\n                // Return a function in order to capture and modify the response body:\n                return function (body, req) {\n                    return body.replace(\n                      /(<\\/body>([\\s\\S]*?)<\\/html>\\s*)$/i,\n                      this._generateInjectClientCode(req) + \"$1\"\n                    );\n                }.bind(this);\n            }.bind(this)));\n        }\n        this._app.use(express.static( this._parsedServeUri.folderUri ));\n    },\n});\n\n","/**\n * NoopChangeServer - A change server that doesn't do anything.\n * @type {NoopChangeServer}\n */\nvar NoopChangeServer = createClass(\"NoopChangeServer\", {\n\n    /**\n     * constructor - A change server that doesn't notifies.\n     */\n    constructor: function() {\n    },\n\n    /**\n     * filesChanged - Callback method where the server is notified the monitored files changed.\n     * @param {Object} changes\n     * @return {void}\n     */\n    filesChanged : function(changes) {\n        // noop on purpose.\n    },\n\n    /**\n     * run - To start the serving.\n     * @return {void}\n     */\n    run : function() {\n        // noop on purpose\n    }\n});\n","/**\n * ExecuteCommandsServer - An executor that will run the given\n *                         commands before notifying the change\n *                         server of the changes.\n * @type {ExecuteCommandsServer}\n */\nvar ExecuteCommandsServer = createClass(\"ExecuteCommandsServer\", {\n\t_commands : null,\n\t_changeServer : null,\n\n    /**\n     * constructor\n     * @param {Array<string>} commands\n\t * @param {ChangeServer} changeServer\n\t */\n    constructor: function(commands, changeServer) {\n        this._commands = commands;\n        this._changeServer = changeServer;\n    },\n\n    /**\n     * filesChanged - Executes the registered commands and then forwards the\n     *                change to the change server.\n     * @param {} changes\n     * @return {void}\n     */\n    filesChanged : function(changes) {\n        console.log(chalk.green(\"\\nChanges occurred\"));\n\n        this._commands.forEach(function(command) {\n            var k;\n\n            if (!isSingleFileCommand(command)) {\n                runCommand(command);\n                return;\n            }\n\n            for (k in changes.created) {\n                runCommand(command, k);\n            }\n\n            for (k in changes.changed) {\n                runCommand(command, k);\n            }\n        });\n\n        this._changeServer.filesChanged(changes);\n    }\n});\n\n\nfunction runCommand(command, file) {\n    if (file) {\n        console.log(\"\\nRunning: \" + chalk.green(command) + \" for '\" + chalk.blue(file) + \"'\");\n    } else {\n        console.log(\"\\nRunning: \" + chalk.green(command));\n    }\n\n    try {\n        var options = {\n            encoding: 'utf-8'\n        };\n\n        if (file) {\n            options['env'] = merge(process.env, {\n                \"FILE\" : file\n            });\n        }\n\n        var result = childProcess.execSync(command, options);\n\n        console.log(result);\n    } catch (e) {\n        console.error(chalk.yellow(\"Command failed: \" + command), e.message);\n        console.log(e.stdout);\n        console.error(e.stderr);\n    }\n}\n\n/**\n * isSingleFileCommand - Returns true if this command is meant to process a single\n *                       file, that is refers to $FILE or ${FILE} or %FILE% in the\n *                       command string.\n * @param {string} command\n * @return {boolean}\n */\nfunction isSingleFileCommand(command) {\n    return /.*\\$FILE.*/.test(command) ||\n           /.*\\$\\{FILE\\}.*/.test(command) ||\n           /.*%FILE%.*/.test(command);\n}\n\n/**\n * joinProperties - Create a new object with the properties of the extra\n *         item overlayed over the base one. Protypal chain is ignored.\n *         This IS NOT A DEEP COPY.\n * @param {} base\n * @param {} extra\n * @return {object}\n */\nfunction merge(base, extra) {\n  var result = {};\n\n  for (var k in base) {\n    if (base.hasOwnProperty(k)) {\n      result[k] = base[k];\n    }\n  }\n\n  for (var k in extra) {\n    result[k] = extra[k];\n  }\n\n  return result;\n}\n\n","/**\n * ExecutorSet - Data assignment between a bunch of monitored folders and commands to be executed when data changes in any of the folders.\n * @type {ExecutorSet}\n */\nvar ExecutorSet = createClass(\"ExecutorSet\", {\n    /**\n     * @type {Array<string>}\n     */\n    _monitoredFolders : null,\n\n    /**\n     * @type {Array<string>}\n     */\n    _resolvedGlobPaths : null,\n\n    /**\n     * @type {Array<string>}\n     */\n    executedCommands : null,\n\n    /**\n     * @type {boolean}\n     */\n    noNotifications : false,\n\n    /**\n     * constructor - Default constructor.\n     */\n    constructor: function() {\n        this._monitoredFolders = [];\n        this._executedCommands = [];\n    },\n\n    /**\n     * addMonitoredPath - Adds a monitored folder.\n     * @param {string} path\n     * @return {ExecutorSet}\n     */\n    addMonitoredPath : function(path) {\n        this._monitoredFolders.push(path);\n        this._resolvedGlobPaths = null;\n        return this;\n    },\n\n    /**\n     * addExecutedCommand - Adds a command to execute.\n     * @param {string} command\n     * @return {ExecutorSet}\n     */\n    addExecutedCommand : function(command) {\n        this._executedCommands.push(command);\n        return this;\n    },\n\n    /**\n     * Returns the monitored paths. If no paths are registered,\n     * return the current folder. The paths are going to be resolved\n     * using globs.\n     * @return {Array<string>}\n     */\n    getMonitoredPaths : function() {\n        var foundItems = {},\n            resolvedGlob;\n\n        if (this._monitoredFolders.length == 0) {\n            this._resolvedGlobPaths = null;\n            this._monitoredFolders.push(\".\");\n        }\n\n        if (this._resolvedGlobPaths) {\n            return this._resolvedGlobPaths;\n        }\n\n        for (var i = 0; i < this._monitoredFolders.length; i++) {\n            var monitoredGlobPattern = this._monitoredFolders[i];\n            var globFoundPaths = glob.sync(monitoredGlobPattern);\n\n            for (var j = 0; j < globFoundPaths.length; j++) {\n                var globPath = globFoundPaths[j];\n                foundItems[globPath] = 1;\n            }\n        }\n\n        this._resolvedGlobPaths = [];\n        for (var resolvedGlobPath in foundItems) {\n            this._resolvedGlobPaths.push(resolvedGlobPath);\n        }\n\n        return this._resolvedGlobPaths;\n    },\n\n    /**\n     * Returns the commands to be executed.\n     * @return {Array<string>}\n     */\n    getExecutedCommands : function() {\n        return this._executedCommands;\n    }\n});\n","/**\n * Shows the help for the application, and exits the application.\n * @return {void}\n */\nfunction showHelp() {\n    var helpText;\n\n    helpText = fs.readFileSync(__dirname + \"/readme.hbs\", {\n        encoding: 'utf-8'\n    });\n\n    var context;\n\n    if (chalk.supportsColor) {\n        context = {\n            GRAY: chalk.styles.gray.open,\n            RESET: chalk.styles.reset.open,\n            BLUE: chalk.styles.cyan.open,\n            GREEN: chalk.styles.green.open,\n            BOLD: chalk.styles.bold.open\n        };\n    } else {\n        context = {};\n    }\n\n    context.BINARY = \"fast-live-reload\";\n\n    console.log(handlebars.compile(helpText)(context));\n\n    process.exit();\n}\n","var serveUri,\n    noServe = false,\n    port = 9001,\n    servePort = 9000,\n    interval = 100,\n    delay = 50,\n    executorSets = [ new ExecutorSet() ],\n    parallelExecutePrograms = [],\n    dryRun = false,\n    shouldCreateClientServer = true,\n    shouldInjectClientCode = true;\n\n//\n// Process the arguments.\n//\n// This works by iterating over the arguments, and splitting them\n// in pairs of FOLDER.. EXECUTE.. sequences, that define what chains\n// of commands will execute, when files in the given folders change.\n//\n\nvar currentExecutor = executorSets[0],\n    paramState = \"FOLDER\"; // can be either FOLDER or EXECUTE\n\nfunction nextArgument(index, command) {\n    if (index + 1 < process.argv.length) {\n        return process.argv[i + 1];\n    }\n\n    console.error(\"Missing extra command line parameter for \" + command);\n    throw new Error(\"Missing extra command line parameter for \" + command);\n}\n\nfor (var i = 2; i < process.argv.length; i++) {\n    var arg = process.argv[i];\n\n    if (\"-h\" == arg || \"--help\" == arg || \"-help\" == arg) {\n        showHelp(); // this exits the application.\n    }\n\n    if (\"--interval\" == arg) {\n        interval = parseInt(nextArgument(i, arg));\n        i++; // skip the next parameter\n        continue;\n    }\n\n    if (\"-p\" == arg || \"--port\" == arg) {\n        port = parseInt(nextArgument(i, arg));\n        i++; // skip the next parameter\n        continue;\n    }\n\n    if (\"-s\" == arg || \"--serve\" == arg) {\n        serveUri = nextArgument(i, arg);\n        i++; // skip the next parameter\n        continue;\n    }\n\n    if (\"-sp\" == arg || \"-serve-port\" == arg) {\n        servePort = parseInt(nextArgument(i, arg));\n        i++; // skip the next parameter\n        continue;\n    }\n\n    if (\"-d\" == arg || \"--delay\" == arg) {\n        delay = parseInt(nextArgument(i, arg));\n        i++; // skip the next parameter\n        continue;\n    }\n\n    if (\"-ns\" == arg || \"--no-serve\" == arg) {\n        noServe = true;\n        continue;\n    }\n\n    if (\"-n\" == arg || \"--dry-run\" == arg) {\n        dryRun = true;\n        continue;\n    }\n\n    if (\"-ni\" == arg || \"--no-inject\" == arg) {\n        shouldInjectClientCode = false;\n        continue;\n    }\n\n    if (\"-ep\" == arg || \"-pe\" == arg || \"--parallel-execute\" == arg) {\n        var parallelExecute = nextArgument(i, arg);\n        i++; // skip the next parameter\n        parallelExecutePrograms.push(parallelExecute);\n\n        continue;\n    }\n\n    if (\"-nn\" == arg || \"--no-notify\" == arg) {\n        currentExecutor.noNotifications = true;\n        continue;\n    }\n\n    if (\"-nc\" == arg || \"--no-clients\" == arg) {\n        shouldCreateClientServer = false;\n        shouldInjectClientCode = false;\n        continue;\n    }\n\n    if (\"-o\" == arg || \"--offline\" == arg) { // no clients, and no served files\n        shouldInjectClientCode = false;\n        shouldCreateClientServer = false;\n        noServe = true;\n        continue;\n    }\n\n    if (\"-e\" == arg || \"--execute\" == arg) {\n        if (paramState == \"FOLDER\") {\n            paramState = \"EXECUTE\";\n        }\n\n        var programName = nextArgument(i, arg);\n        i++; // skip the next parameter\n        currentExecutor.addExecutedCommand(programName);\n\n        continue;\n    }\n\n    if (\"--add-path\" == arg) { // a path to be added.\n        arg = nextArgument(i, arg);\n        i++; // skip the next parameter\n    }\n\n    if (paramState == \"EXECUTE\") {\n        paramState = \"FOLDER\";\n        currentExecutor = new ExecutorSet();\n        executorSets.push( currentExecutor );\n    }\n\n    currentExecutor.addMonitoredPath(arg);\n}\n\nif (!serveUri) {\n    serveUri = executorSets[0].getMonitoredPaths()[0];\n}\n\n/**\n * isLocalServe - Checks if the given pathOrUrl is a remote URL or not.\n * @param {string} pathOrUrl\n * @return {boolean}\n */\nfunction isLocalServe(pathOrUrl) {\n    // find only the host part for proxying\n    var m = /^(.*?\\:\\/\\/[^/]+)(\\/?.*)$/.exec( pathOrUrl );\n\n    return !m;\n}\n","\nvar changeServer,\n    noNotificationsChangeServer = new NoopChangeServer();\n\nvar logIndex = 0,\n    runningProcesses = [];\n\nif (!dryRun) {\n    changeServer = shouldCreateClientServer ? new ChangeServer(port) : noNotificationsChangeServer;\n}\n\nvar sentencePrefix = dryRun ? onceMany(\"Should \", \"and should \") : onceMany(\"Will \", \"and will \");\n\nif (shouldCreateClientServer) {\n    console.log(++logIndex + \". \" + sentencePrefix.next() +\n        \"notify the changes for clients on port \" + chalk.cyan(port));\n}\n\nif (! noServe) {\n    var parsedUri = new ParsedUri(serveUri);\n    if (!dryRun) {\n        new IFrameServer(servePort, parsedUri, port, shouldInjectClientCode).run();\n    }\n    console.log(++logIndex + \". \" + sentencePrefix.next() +\n        \"serve the content from \" + chalk.cyan(parsedUri.folderUri) +\n        \" on port \" + chalk.cyan(servePort));\n}\n\nif (parallelExecutePrograms.length) {\n    console.log(++logIndex + \". \" + sentencePrefix.next() +\n        \"run on startup, and then kill on shutdown:\");\n\n    parallelExecutePrograms.forEach(function(command, index) {\n        console.log(\"   \" + chalk.gray( String.fromCharCode(97 + index) + \": \") + chalk.green(command));\n    });\n\n    if (!dryRun) {\n        parallelExecutePrograms.forEach(function startCommand(command) {\n            var process = childProcess.exec(command);\n            runningProcesses.push(process);\n\n            // output\n            process.stdout.on(\"data\", function (data) {\n                console.log(chalk.gray(\"> \" + command));\n                console.log(\"\" + data);\n            });\n            process.stderr.on(\"data\", function (data) {\n                console.log(chalk.red(\"> \" + command));\n                console.error(\"\" + data);\n            });\n\n            process.on('exit', function() {\n                console.log(chalk.red(\"`\" + command + \"` failed. Restarting.\"));\n                runningProcesses.splice( runningProcesses.indexOf(process), 1 );\n\n                startCommand(command);\n            })\n        });\n    }\n}\n\n//\n// We need a watcher to monitor the file system folders, and a\n// change server that will notify active browser clients when changes\n// occured.\n//\nconsole.log(++logIndex + \". \" + sentencePrefix.next() +\n    \"monitor and execute when files change in subfolders:\");\n\n// find the maximum path length for padding purposes.\nvar maxPathLength = computeMaxPathLength(executorSets);\n\nexecutorSets.forEach(function(executorSet, index) {\n    var watcher,\n        watcherCallback,\n        i;\n\n    var monitoredPaths = executorSet.getMonitoredPaths(),\n        executedCommands = executorSet.getExecutedCommands(),\n        noNotifications = executorSet.noNotifications || !shouldCreateClientServer;\n\n    var indent = onceMany(\"   \" + chalk.gray( String.fromCharCode(97 + index) + \": \"), \"      \"),\n        arrow = onceMany(executedCommands.length ? chalk.gray(\" -> \") : \"    \", \"    \"),\n        noNotify = onceMany( noNotifications ? chalk.gray(\" (no refresh)\") : \"\", \"\" );\n\n    for (i = 0; i < Math.max(monitoredPaths.length, executedCommands.length); i++) {\n        console.log(indent.next() +\n                    chalk.cyan(rpad(monitoredPaths[i] || \"\", maxPathLength)) +\n                    arrow.next() +\n                    chalk.green(executedCommands[i] || \"\") +\n                    noNotify.next());\n    }\n\n    if (dryRun) { // don't actually execute anything.\n        return;\n    }\n\n    watcher = new Watcher(interval, delay, monitoredPaths);\n\n    var localChangeServer = noNotifications ? noNotificationsChangeServer : changeServer;\n\n    //\n    // In case commands need to be executed, we notify the command executor server\n    // of the file changes, and in turn it will notify the change server after the\n    // commands are done.\n    //\n    // The reason is allowing having a build that also changes data, so we don't get\n    // too many triggers for reloading of the page.\n    //\n    if (executedCommands.length) {\n        var executeCommandsServer = new ExecuteCommandsServer(executedCommands, localChangeServer);\n        watcherCallback = executeCommandsServer.filesChanged.bind(executeCommandsServer);\n    } else {\n        watcherCallback = changeServer.filesChanged.bind(localChangeServer);\n    }\n\n    watcher.addListener( watcherCallback );\n    watcher.monitor();\n});\n\nif (!dryRun) {\n    changeServer.run();\n}\n\nprocess.on(\"exit\", function() { // kill everything on exit.\n    runningProcesses.forEach(function(process) {\n        process.kill();\n    });\n});\n\n/**\n * Pads the string at the end with spaces to fit the given length.\n * @param {string} s\n * @param {number} pad\n */\nfunction rpad(s, pad) {\n    for (var i = s.length; i < pad; i++) {\n        s = s + \" \";\n    }\n\n    return s;\n}\n\n/**\n * Finds the length of the longest path across all monitored paths from\n * the executor sets\n * @param {Array<ExecutorSet>} executorSets\n * @return {number}\n */\nfunction computeMaxPathLength(executorSets) {\n    var maxPathLength = 0;\n\n    executorSets.forEach(function(executorSet) {\n        var monitoredPaths = executorSet.getMonitoredPaths();\n        for (var i = 0; i < monitoredPaths.length; i++) {\n            maxPathLength = Math.max(maxPathLength, (monitoredPaths[i] || \"\").length);\n        }\n    });\n\n    return maxPathLength;\n}\n"]}